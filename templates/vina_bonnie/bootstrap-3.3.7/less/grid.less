//
// Grid system
// --------------------------------------------------


// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
  .container-fixed();

  @media (min-width: @screen-xxxs-min) {
    width: @container-xxxs;
  }
  @media (min-width: @screen-xxs-min) {
    width: @container-xxs;
  }
  @media (min-width: @screen-xs-min) {
    width: @container-xs;
  }
  @media (min-width: @screen-sm-min) {
    width: @container-sm;
  }
  @media (min-width: @screen-md-min) {
    width: @container-md;
  }
  @media (min-width: @screen-lg-min) {
    width: @container-lg;
  }
}


// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
  .container-fixed();
}


// Row
//
// Rows contain and clear the floats of your columns.

.row {
  .make-row();
}


// Columns
//
// Common styles for small and large grid columns

.make-grid-columns();

@media (min-width: @screen-xxs-min) and (max-width: @screen-lg-max)   {
  .make-grid(lg);
}

@media (min-width: @screen-xxxs-min) and (max-width: @screen-xxxs-max)   {
  .make-grid(xxxs);
}

@media (min-width: @screen-xxs-min)  and (max-width: @screen-xxs-max)   {
  .make-grid(xxs);
}
@media (min-width: @screen-xs-min)  and (max-width: @screen-xs-max)   {
  .make-grid(xs);
}

@media (min-width: @screen-sm-min)  and (max-width: @screen-sm-max)   {
  .make-grid(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: @screen-md-min) and (max-width: @screen-md-max)   {
  .make-grid(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: @screen-lg-min)  {
  .make-grid(lg);
}
