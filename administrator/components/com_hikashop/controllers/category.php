<?php/** * @package    HikaShop for Joomla! * @version    2.6.3 * @author    hikashop.com * @copyright    (C) 2010-2016 HIKARI SOFTWARE. All rights reserved. * @license    GNU/GPLv3 http://www.gnu.org/licenses/gpl-3.0.html */defined('_JEXEC') or die('Restricted access');?><?phpclass CategoryController extends hikashopController{    var $type = 'category';    var $pkey = 'category_id';    var $table = 'category';    var $groupMap = 'category_parent_id';    var $orderingMap = 'category_ordering';    var $groupVal = 0;    function __construct()    {        parent::__construct();        $this->display[] = 'selectstatus';        $this->display[] = 'getTree';        $this->display[] = 'findList';        $this->display[] = 'auto_get_alias';        $this->display[] = 'vatgia_import_product';        $this->display[] = 'vatgia_import_product_all';        $this->display[] = 'taobao_import_product_all';        $this->display[] = 'getproductsvatgia';        $this->display[] = 'getproductstaobao';        $this->display[] = 'get_detail_product_from_vatgia';        $this->display[] = 'get_detail_product_from_taobao';        $this->modify_views[] = 'edit_translation';        $this->modify[] = 'save_translation';        $this->modify[] = 'rebuild';        $this->modify_views[] = 'selectparentlisting';    }    function edit_translation()    {        JRequest::setVar('layout', 'edit_translation');        return parent::display();    }    function save_translation()    {        $category_id = hikashop_getCID('category_id');        $class = hikashop_get('class.category');        $element = $class->get($category_id);        if (!empty($element->category_id)) {            $class = hikashop_get('helper.translation');            $class->getTranslations($element);            $class->handleTranslations('category', $element->category_id, $element);        }        $document = JFactory::getDocument();        $document->addScriptDeclaration('window.top.hikashop.closeBox();');    }    public function get_detail_product_from_vatgia()    {        $app=JFactory::getApplication();        $vatgia_category_id=$app->input->getInt('vatgia_category_id');        $vatgia_product_id=$app->input->getInt('vg_product_id',0);        $vatgia_deal=$app->input->getInt('vatgia_deal',0);        $link_product=$app->input->getString('link_product','');        $utilityHelper = hikashop_get('helper.utility');        if($vatgia_deal==1){            $link_product=urldecode($link_product);            $link_product = preg_split('/\/+/', $link_product);            $product_name=$link_product[3];            $product_name=substr($product_name,0,-5);            $product_name=$utilityHelper->get_alias($product_name);            $link_product=$product_name.'-'.$link_product[2].'.html?';            $link_product='http://deal.vatgia.com/deal/'.$link_product;        }else{            $link_product='http://www.vatgia.com'.$link_product;        }        $data=JUtility::getCurl($link_product);        $response=new stdClass();        $html_content='';        $product_price=0;        $product_name='';        $meta_description='';        $vendor_name='';        $product_keywords='';        $price_promotion=0;        $list_link_product=array();        require_once JPATH_ROOT.'/libraries/simplehtmldom_1_5/simple_html_dom.php';        $html = str_get_html($data);        if(strlen($data)>100 && $html)        {            foreach ($html->find('script') as $node)            {                $node->outertext = '';            }            $html->load($html->save());            //parse products            $estore_ppc_table=$html->find('table#estore_ppc_table');            $estore_bronze_table=$html->find('table#estore_bronze_table');            if(count($estore_ppc_table)){                $estore_ppc_table=reset($estore_ppc_table);                $response->reload_product=1;                $html_tr=$estore_ppc_table->find('tr');                foreach($html_tr as $tr){                    $item_vg_product=new stdClass();                    $link=$tr->find('a.form_button_3')[0]->href;                    $item_vg_product->link=$link;                    $array_record_id=explode('&',$link);                    $vatgia_product_id=0;                    foreach($array_record_id as $item){                        $strpos=strpos($item, 'record_id=');                        if ($strpos !== false) {                            $vatgia_product_id=(int)substr($item,10);                            break;                        }                    }                    $item_vg_product-> vg_p_id=$vatgia_product_id;                    $list_link_product[]=$item_vg_product;                }                $response->list_link_product=$list_link_product;            }else if(count($estore_bronze_table)){                $estore_bronze_table=reset($estore_bronze_table);                $response->reload_product=1;                $html_tr=$estore_bronze_table->find('tr');                foreach($html_tr as $tr){                    $item_vg_product=new stdClass();                    $link=$tr->find('a.form_button_3')[0]->href;                    $item_vg_product->link=$link;                    $array_record_id=explode('&',$link);                    $vatgia_product_id=0;                    foreach($array_record_id as $item){                        $strpos=strpos($item, 'record_id=');                        if ($strpos !== false) {                            $vatgia_product_id=(int)substr($item,10);                            break;                        }                    }                    $item_vg_product-> vg_p_id=$vatgia_product_id;                    $list_link_product[]=$item_vg_product;                }                $response->list_link_product=$list_link_product;            }else{                $response->reload_product=0;                $response->vatgia_product_id=$vatgia_product_id;                $html_content=$html->find('div#detail_product_exclusive_main .content');                if(count($html_content)){                    $html_content=reset($html_content);                }else{                    $html_content=reset($html->find('div#detail_product_technical_content'));                }                $product_price = $html->find('div#detail_product_price .product_price')[0];                $product_price = $product_price->innertext;                $product_price = str_replace('.', '', $product_price);                if ($product_price == '') {                    $product_price = $html->find('div#detail_product_price_promotion .price_old')[0];                    $product_price = $product_price->innertext;                    $product_price = str_replace('.', '', $product_price);                    $product_price = str_replace('â‚«', '', $product_price);                    $price_promotion = $html->find('div#detail_product_price_promotion .price_promotion')[0];                    $price_promotion = $price_promotion->innertext;                    $price_promotion = str_replace('.', '', $price_promotion);                    $price_promotion_time = $html->find('div#detail_product_price_promotion .price_text_time')[0];                    $price_promotion_time=$price_promotion_time->attr['data-countdown'];                }                $src_image = $html->find('div#detail_product_picture_main h2 img')[0];                $src_image = $src_image->src;                $product_name = $html->find('h1#detail_product_name')[0];                $product_name = $product_name->innertext;                $meta_description = $html->find('meta[name="description"]')[0];                $meta_description = $meta_description->content;                $product_keywords = $html->find('meta[name="keywords"]')[0];                $product_keywords=$product_keywords->content;                if($html_content==""){                    $html_content="";                }                $vendor_name=$html->find('div#detail_product_statistic .box_estore_info .estore_name .name a')[0];                $vendor_name=$vendor_name->innertext;            }        }        $response->html_content=base64_encode($html_content);        $response->product_price=$product_price;        $response->price_promotion=$price_promotion;        $response->price_promotion_time=$price_promotion_time;        $response->product_name=$product_name;        $response->list_link_product=$list_link_product;        $response->vatgia_product_id=$vatgia_product_id;        $response->link_product=$link_product;        $response->vendor_name=$vendor_name;        $response->src_image=base64_encode($src_image);        $response->meta_description=base64_encode($meta_description);        $response->product_keywords=base64_encode($product_keywords);        echo json_encode($response);        die;    }    public function get_detail_product_from_taobao()    {        $app=JFactory::getApplication();        $taobao_category_id=$app->input->getInt('taobao_category_id');        $taobao_product_id=$app->input->getString('tb_product_id','');        $taobao_deal=$app->input->getInt('taobao_deal',0);        $product_link=$app->input->getString('product_link','');        $response=new stdClass();        $strpos=strpos($product_link, 'tmall.com');        if ($strpos !== false) {            $response->e=1;            $response->m="cancel because product get from tmall.com";            echo json_encode($response);            die;        }        $utilityHelper = hikashop_get('helper.utility');        if($taobao_deal==1){            $product_link=urldecode($product_link);            $product_link = preg_split('/\/+/', $product_link);            $product_name=$product_link[3];            $product_name=substr($product_name,0,-5);            $product_name=$utilityHelper->get_alias($product_name);            $product_link=$product_name.'-'.$product_link[2].'.html?';            $product_link='http://deal.taobao.com/deal/'.$product_link;        }else{            $product_link="https://world.taobao.com/item/$taobao_product_id.htm?fromSite=main&ns=1&abbucket=0#detail";        }        $data=JUtility::getCurl($product_link);        $html_content='';        $product_price=0;        $product_name='';        $meta_description='';        $vendor_name='';        $product_keywords='';        $price_promotion=0;        $price_promotion_time=0;        $list_link_product=array();        $list_image=array();        require_once JPATH_ROOT.'/libraries/simplehtmldom_1_5/simple_html_dom.php';        $html = str_get_html($data);        if(strlen($data)>100 && $html)        {            foreach ($html->find('script') as $node)            {                $node->outertext = '';            }            $html->load($html->save());            //parse products            $estore_ppc_table=$html->find('table#estore_ppc_table');            $estore_bronze_table=$html->find('table#estore_bronze_table');            if(count($estore_ppc_table)){                $estore_ppc_table=reset($estore_ppc_table);                $response->reload_product=1;                $html_tr=$estore_ppc_table->find('tr');                foreach($html_tr as $tr){                    $item_tb_product=new stdClass();                    $link=$tr->find('a.form_button_3')[0]->href;                    $item_tb_product->link=$link;                    $array_record_id=explode('&',$link);                    $taobao_product_id=0;                    foreach($array_record_id as $item){                        $strpos=strpos($item, 'record_id=');                        if ($strpos !== false) {                            $taobao_product_id=(int)substr($item,10);                            break;                        }                    }                    $item_tb_product-> tb_p_id=$taobao_product_id;                    $list_link_product[]=$item_tb_product;                }                $response->list_link_product=$list_link_product;            }else if(count($estore_bronze_table)){                $estore_bronze_table=reset($estore_bronze_table);                $response->reload_product=1;                $html_tr=$estore_bronze_table->find('tr');                foreach($html_tr as $tr){                    $item_tb_product=new stdClass();                    $link=$tr->find('a.form_button_3')[0]->href;                    $item_tb_product->link=$link;                    $array_record_id=explode('&',$link);                    $taobao_product_id=0;                    foreach($array_record_id as $item){                        $strpos=strpos($item, 'record_id=');                        if ($strpos !== false) {                            $taobao_product_id=(int)substr($item,10);                            break;                        }                    }                    $item_tb_product->tb_p_id=$taobao_product_id;                    $list_link_product[]=$item_tb_product;                }                $response->list_link_product=$list_link_product;            }else{                $response->reload_product=0;                $response->taobao_product_id=$taobao_product_id;                $html_content=$html->find('.item-detail');                if(count($html_content)){                    $html_content=reset($html_content);                }else{                        $html_content=reset($html->find('div#detail_product_technical_content'));                }                $product_price = reset($html->find('.tb-summary span[itemprop="price"]'));                $product_price = $product_price->innertext;                $product_price = str_replace('.00', '', $product_price);                $product_price= (int)$product_price;                $html_list_image = $html->find('ul#J_ThumbNav li a img');                foreach($html_list_image as $tag_img){                    $src=$tag_img->src;                    $src=str_replace('jpg_70x70','jpg_600x600',$src);                    $list_image[]=$src;                }                $product_name = reset($html->find('.tb-summary span[itemprop="name"]'));                $product_name = $product_name->innertext;                $meta_description = $html->find('meta[name="description"]')[0];                $meta_description = $meta_description->content;                $product_keywords = $html->find('meta[name="keywords"]')[0];                $product_keywords=$product_keywords->content;                if($html_content==""){                    $html_content="";                }                $vendor_name=$html->find('.shop-info .tb-shop-name  h3 a')[0];                $vendor_name=$vendor_name->innertext;            }        }        $response->html_content=base64_encode($html_content);        $response->list_image=$list_image;        $response->src_image=base64_encode('http:'.reset($list_image));        $response->product_price=$product_price;        $response->price_promotion=$price_promotion;        $response->price_promotion_time=$price_promotion_time;        $response->product_name=$product_name;        $response->list_link_product=$list_link_product;        $response->taobao_product_id=$taobao_product_id;        $response->product_link=$product_link;        $response->vendor_name=$vendor_name;        $response->meta_description=base64_encode($meta_description);        $response->product_keywords=base64_encode($product_keywords);        echo json_encode($response);        die;    }    public function getproductsvatgia()    {        $app=JFactory::getApplication();        $vatgia_category_id=$app->input->getInt('vatgia_category_id');        $category_id=$app->input->getInt('category_id',0);        $filter_page_number=$app->input->getInt('filter_page_number',1);        $filter_by=$app->input->getString('filter_by','hot');        $class = hikashop_get('class.category');        $category_item = $class->get($category_id,true);        $db=JFactory::getDbo();        $query=$db->getQuery(true);        $query->update('#__hikashop_category')            ->set('vatgia_category_id='.(int)$vatgia_category_id)            ->where('category_id='.(int)$category_id)        ;        $db->setQuery($query)->execute();        $config=JFactory::getConfig();        $is_localhost=$config->get('is_localhost',0);        if($is_localhost) {            //remote update            $post_category_update = new stdClass();            $post_category_update->option = 'com_hikashop';            $post_category_update->ctrl = 'category';            $post_category_update->task = 'update_remote_category';            $post_category_update->category_id = $category_id;            $post_category_update->vatgia_category_id = $vatgia_category_id;            $ch = curl_init();            $post = http_build_query($post_category_update);            curl_setopt($ch, CURLOPT_URL, "http://banhangonline88.com/index.php");            curl_setopt($ch, CURLOPT_POST, 1);            curl_setopt($ch, CURLOPT_POSTFIELDS, $post);            // in real life you should use something like:            // curl_setopt($ch, CURLOPT_POSTFIELDS,            //          http_build_query(array('postvar1' => 'value1')));            // receive server response ...            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);            $server_output = curl_exec($ch);            curl_close($ch);            //end remote update        }        $link_get_product="http://www.vatgia.com/$vatgia_category_id,$filter_by/abc.html?&page=$filter_page_number";        $data=JUtility::getCurl($link_get_product);        $response=new stdClass();        $html='';        if(strlen($data)>100)        {            //parse products            require_once JPATH_ROOT.'/libraries/simplehtmldom_1_5/simple_html_dom.php';            $html = str_get_html($data);            $html=$html->find('div#top_product')[0];            if($html==""){                $html="no product";            }        }else{            $html="no product";        }        $response->html=base64_encode($html);        $response->link=$link_get_product;        echo json_encode($response);        die;    }    public function getproductstaobao()    {        $app=JFactory::getApplication();        $taobao_category_id=$app->input->getInt('taobao_category_id');        $category_id=$app->input->getInt('category_id',0);        $filter_page_number=$app->input->getInt('filter_page_number',1);        $filter_by=$app->input->getString('filter_by','hot');        $taobao_category_name=$app->input->getString('taobao_category_name','');        $taobao_link_category=$app->input->getString('taobao_link_category','');        $class = hikashop_get('class.category');        $category_item = $class->get($category_id,true);        $db=JFactory::getDbo();        $query=$db->getQuery(true);        $query->update('#__hikashop_category')            ->set('taobao_category_id='.(int)$taobao_category_id)            ->set('taobao_category_name='.$query->q($taobao_category_name))            ->set('taobao_link_category='.$query->q($taobao_link_category))            ->where('category_id='.(int)$category_id)        ;        $db->setQuery($query)->execute();        $config=JFactory::getConfig();        $is_localhost=$config->get('is_localhost',0);        if($is_localhost) {            //remote update            $post_category_update = new stdClass();            $post_category_update->option = 'com_hikashop';            $post_category_update->ctrl = 'category';            $post_category_update->task = 'update_remote_category_taobao';            $post_category_update->category_id = $category_id;            $post_category_update->taobao_category_id = $taobao_category_id;            $post_category_update->taobao_category_name = $taobao_category_name;            $post_category_update->taobao_link_category = $taobao_link_category;            $ch = curl_init();            $post = http_build_query($post_category_update);            curl_setopt($ch, CURLOPT_URL, "http://banhangonline88.com/index.php");            curl_setopt($ch, CURLOPT_POST, 1);            curl_setopt($ch, CURLOPT_POSTFIELDS, $post);            // in real life you should use something like:            // curl_setopt($ch, CURLOPT_POSTFIELDS,            //          http_build_query(array('postvar1' => 'value1')));            // receive server response ...            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);            $server_output = curl_exec($ch);            curl_close($ch);            //end remote update        }        $post = new stdClass();        $post->{"data-value"} = 44*($filter_page_number-1);        $post->{"data-key"} = "s";        $post->bcoffset = 0;        $post->ajax = true;        $post = http_build_query($post);        //$link_get_product="https://s.taobao.com/search?q=$taobao_category_name&sort=sale-desc";        $link_get_product="$taobao_link_category&$post";        $data=JUtility::getCurl($link_get_product);        $data=json_decode($data);        $list_product=$data->mods->itemlist->data->auctions;        $html="";        $list_list_product=array_chunk($list_product,4);        ob_start();        ?>            <?php foreach($list_list_product as $current_list_product){ ?>                <div class="row-fluid">                    <?php foreach($current_list_product as $product){ ?>                        <div class="span3">                            <img class="img-responsive" src="<?php echo $product->pic_url ?>">                            <h3><a href="<?php echo $product->detail_url  ?>"><?php echo $product->title ?></a>(<?php echo JText::sprintf('sales %s',$product->view_sales) ?>)</h3>                        </div>                    <?php } ?>                </div>            <?php } ?>        <?php        $html=ob_get_clean();        $response=new stdClass();        $response->link=$link_get_product;        $response->html=base64_encode($html);        $response->list_product=$list_product;        echo json_encode($response);        die;    }    function auto_get_alias()    {        $input = JFactory::getApplication()->input;        $post = json_decode(file_get_contents('php://input'));        $title = $post->title;        $title = explode(' ', $title);        $title = array_slice($title, 0, 10);        $title = implode('-', $title);        $title = JString::vn_str_filter($title);        $title = strtolower($title);        echo new JResponseJson($title, null, false, $input->get('ignoreMessages', true, 'bool'));    }    function rebuild()    {        $class = hikashop_get('class.category');        $database = JFactory::getDBO();        $query = 'SELECT category_left,category_right,category_depth,category_id,category_parent_id FROM #__hikashop_category ORDER BY category_left ASC';        $database->setQuery($query);        $root = null;        $categories = $database->loadObjectList();        $class->categories = array();        foreach ($categories as $cat) {            $class->categories[$cat->category_parent_id][] = $cat;            if (empty($cat->category_parent_id)) {                $root = $cat;            }        }        if (!empty($root)) {            $query = 'UPDATE `#__hikashop_category` SET category_parent_id = ' . (int)$root->category_id . ' WHERE category_parent_id = 0 AND category_id != ' . (int)$root->category_id . '';            $database->setQuery($query);            $database->query();        }        $class->rebuildTree($root, 0, 1);        $app = JFactory::getApplication();        $app->enqueueMessage(JText::_('CATEGORY_TREE_REBUILT'));        $this->listing();    }    function orderdown()    {        $this->getGroupVal();        return parent::orderdown();    }    function orderup()    {        $this->getGroupVal();        return parent::orderup();    }    function saveorder()    {        $this->getGroupVal();        return parent::saveorder();    }    function getGroupVal()    {        $app = JFactory::getApplication();        $this->groupVal = $app->getUserStateFromRequest(HIKASHOP_COMPONENT . '.category.filter_id', 'filter_id', 0, 'string');        if (!is_numeric($this->groupVal)) {            $class = hikashop_get('class.category');            $class->getMainElement($this->groupVal);        }    }    function selectparentlisting()    {        JRequest::setVar('layout', 'selectparentlisting');        return parent::display();    }    function vatgia_import_product()    {        JRequest::setVar('layout', 'vatgia_import_product');        return parent::display();    }    function vatgia_import_product_all()    {        JRequest::setVar('layout', 'vatgia_import_product_all');        return parent::display();    }    function taobao_import_product_all()    {        JRequest::setVar('layout', 'taobao_import_product_all');        return parent::display();    }    function selectstatus()    {        JRequest::setVar('layout', 'selectstatus');        return parent::display();    }    function getTree()    {        while (ob_get_level())            @ob_end_clean();        $category_id = JRequest::getInt('category_id', 0);        $displayFormat = JRequest::getVar('displayFormat', '');        $search = JRequest::getVar('search', null);        $nameboxType = hikashop_get('type.namebox');        $options = array(            'start' => $category_id,            'displayFormat' => $displayFormat        );        $ret = $nameboxType->getValues($search, 'category', $options);        if (!empty($ret)) {            echo json_encode($ret);            exit;        }        echo '[]';        exit;    }    public function findList()    {        $search = JRequest::getVar('search', '');        $start = JRequest::getInt('start', 0);        $type = JRequest::getVar('category_type', '');        $displayFormat = JRequest::getVar('displayFormat', '');        $types = array(            'manufacturer' => 'brand',            'order_status' => 'order_status'        );        if (!isset($types[$type])) {            echo '[]';            exit;        }        $type = $types[$type];        $options = array();        if (!empty($displayFormat))            $options['displayFormat'] = $displayFormat;        if ($start > 0)            $options['page'] = $start;        $nameboxType = hikashop_get('type.namebox');        $elements = $nameboxType->getValues($search, $type, $options);        echo json_encode($elements);        exit;    }}