//huong dan su dung/* $('.menucategory').menucategory(); menucategory=$('.menucategory').data('menucategory'); console.log(menucategory); */// jQuery Plugin for SprFlat admin menucategory// Control options and basic function of menucategory// version 1.0, 28.02.2013// by SuggeElson www.suggeelson.com(function($) {    // here we go!    $.menucategory = function(element, options) {        // plugin's default options        var defaults = {            //main color scheme for menucategory            //be sure to be same as colors on main.css or custom-variables.less            module_id:0,            children_menu_item:{},            root_url:"",            lazyload:false,            showing:false,            max_item_level_2:20,            max_item_level_3:5        }        // current instance of the object        var plugin = this;        // this will hold the merged default, and user-provided options        plugin.settings = {}        var $element = $(element), // reference to the jQuery version of DOM element            element = element;    // reference to the actual DOM element        // the "constructor" method that gets called when the object is created        plugin.load_module = function(module_id) {            var $wrapper_content =$('#mod_menu_'+module_id);            var option_params= {                option: 'com_modules',                format: 'json',                tmpl: 'component',                ignoreMessages: true,                task: 'module.ajax_render_module'            };            option_params= $.param(option_params);            var data_submit={};            data_submit.module_id=module_id;            var ajax_web_design=$.ajax({                contentType: 'application/json',                type: "POST",                dataType: "json",                cache: true,                url: root_ulr+'index.php?'+option_params,                data: JSON.stringify(data_submit),                beforeSend: function () {                },                success: function (response) {                    if(response.success==true)                    {                        var data=response.data;                        $('#mod_menu_'+module_id).html(data);                        var mod_menu=$('#mod_menu_'+module_id).data('menucategory');                        mod_menu.rebuild_style(module_id);                    }else if(response.success==false){                        alert(response.message);                    }                }            });        };        plugin.rebuild_style=function(module_id){            var menucategory=$('#mod_menu_'+module_id).data('menucategory');            var $item_element=$('#mod_menu_'+module_id);        };        plugin.init = function() {            plugin.settings = $.extend({}, defaults, options);            var module_id=plugin.settings.module_id;            var lazyload=plugin.settings.lazyload;            if(lazyload) {                $element.appear(function () {                });                $(document.body).on('appear', '#mod_menu_' + module_id, function (e, $affected) {                    // this code is executed for each appeared element                    var $menucategory = $affected.data('menucategory');                    if (!$menucategory.settings.showing) {                        var lazyload = $menucategory.settings.lazyload;                        $menucategory.settings.showing = true;                        $menucategory.load_module($menucategory.settings.module_id);                    }                });            }        }        plugin.example_function = function() {        }        plugin.init();    }    // add the plugin to the jQuery.fn object    $.fn.menucategory = function(options) {        // iterate through the DOM elements we are attaching the plugin to        return this.each(function() {            // if plugin has not already been attached to the element            if (undefined == $(this).data('menucategory')) {                var plugin = new $.menucategory(this, options);                $(this).data('menucategory', plugin);            }        });    }})(jQuery);