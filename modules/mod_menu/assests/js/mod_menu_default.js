//huong dan su dung/* $('.mod_menu_default').mod_menu_default(); mod_menu_default=$('.mod_menu_default').data('mod_menu_default'); console.log(mod_menu_default); */// jQuery Plugin for SprFlat admin mod_menu_default// Control options and basic function of mod_menu_default// version 1.0, 28.02.2013// by SuggeElson www.suggeelson.com(function($) {    // here we go!    $.mod_menu_default = function(element, options) {        // plugin's default options        var defaults = {            //main color scheme for mod_menu_default            //be sure to be same as colors on main.css or custom-variables.less            module_id:0,            children_menu_item:{},            root_url:"",            max_item_level_2:20,            max_item_level_3:5        }        // current instance of the object        var plugin = this;        // this will hold the merged default, and user-provided options        plugin.settings = {}        var $element = $(element), // reference to the jQuery version of DOM element            element = element;    // reference to the actual DOM element        // the "constructor" method that gets called when the object is created        plugin.load_module = function(module_id) {            var $wrapper_content =$('#mod_menu_'+module_id);            var option_click= {                option: 'com_modules',                format: 'json',                tmpl: 'component',                ignoreMessages: true,                task: 'module.ajax_render_module'            };            option_click= $.param(option_click);            var data_submit={};            data_submit.module_id=module_id;            var ajax_web_design=$.ajax({                contentType: 'application/json',                type: "POST",                dataType: "json",                cache: true,                url: root_ulr+'index.php?'+option_click,                data: JSON.stringify(data_submit),                beforeSend: function () {                    //$wrapper_content.bho88loading();                },                success: function (response) {                    //$wrapper_content.bho88loading(true);                    if(response.success==true)                    {                        var data=response.data;                        $('#mod_menu_'+module_id).find('.wrapper-content').fadeOut( 300, function() {                            $( this ).remove();                        });                        $('#mod_menu_'+module_id).html(data);                        var mod_menu_default=$('#mod_menu_'+module_id).data('mod_menu_default');                        //mod_tab_products.rebuild_style(module_id);                    }else if(response.success==false){                        alert(response.message);                    }                }            });        };        plugin.init = function() {            plugin.settings = $.extend({}, defaults, options);            var module_id=plugin.settings.module_id;            var lazyload=plugin.settings.lazyload;            if(lazyload) {                $element.appear(function () {                });                $(document.body).on('appear', '#mod_menu_' + module_id, function (e, $affected) {                    // this code is executed for each appeared element                    var $mod_menu_default = $affected.data('mod_menu_default');                    if (!$mod_menu_default.settings.showing) {                        var lazyload = $mod_menu_default.settings.lazyload;                        $mod_menu_default.settings.showing = true;                        $mod_menu_default.load_module($mod_menu_default.settings.module_id);                    }                });            }        }        plugin.example_function = function() {        }        plugin.init();    }    // add the plugin to the jQuery.fn object    $.fn.mod_menu_default = function(options) {        // iterate through the DOM elements we are attaching the plugin to        return this.each(function() {            // if plugin has not already been attached to the element            if (undefined == $(this).data('mod_menu_default')) {                var plugin = new $.mod_menu_default(this, options);                $(this).data('mod_menu_default', plugin);            }        });    }})(jQuery);