(function ($) {    // here we go!    $.mod_search = function (element, options) {        // plugin's default options        var defaults = {            //main color scheme for mod_search            //be sure to be same as colors on main.css or custom-variables.less            module_id: 0,            style: "table",            key: "product",            params: {}        }        // current instance of the object        var plugin = this;        // this will hold the merged default, and user-provided options        plugin.settings = {}        var $element = $(element), // reference to the jQuery version of DOM element            element = element;    // reference to the actual DOM element        // the "constructor" method that gets called when the object is created        plugin.init = function () {            plugin.settings = $.extend({}, defaults, options);            var params = plugin.settings.params;            var key = plugin.settings.key;            $element.find('a.key').click(function () {                var key = $(this).data('key');                var text = $(this).data('text');                var page_show_result = $(this).data('page_show_result');                var placeholder = $(this).data('placeholder');                $element.find('span.text').text(text);                $element.find('input[name="keyword"]').attr('placeholder', placeholder);                $element.find('input[name="Itemid"]').val(page_show_result);                $element.find('input[name="key"]').val(key);                var $input = $element.find('input[name="keyword"]');            });            var $form = $element.find('form[name="search"]');            $form.submit(function () {                var list_language = plugin.settings.list_language;                var keyword = $form.find('input[name="keyword"]').val();                if (keyword.trim() == "") {                    $.notify($.Jtext_('MOD_SEARCH_PLACE_INPUT_KEY_WORD', list_language));                    $form.find('input[id="relative-flexdatalist"]').focus();                    return false;                }                return true;            });            $element.find('input[name="keyword"]').change(function(){                var option_click = {                    option: 'com_hikashop',                    format: 'json',                    tmpl: 'json',                    ctrl: 'product',                    task: 'ajax_search_by_keyword',                };                var data_submit = {                    menu_id:menu_id,                    params: {                        layout: '_:submenu'                    }                };                data_submit.module_id = module_id;                var ajax_search = $.ajax({                    contentType: 'application/json',                    type: "POST",                    dataType: "json",                    cache: true,                    url: root_ulr + 'index.php?' + option_click,                    data: JSON.stringify(data_submit),                    beforeSend: function () {                        $content_inner.bho88loading();                    },                    success: function (response) {                        if (response.success == true) {                            //z-content-inner                            var data = response.data;                            $content_inner.bho88loading(false);                            $content_inner.html(data);                        } else if (response.success == false) {                            alert(response.message);                        }                        $content_inner.data('ajax_completed',true);                        plugin.quick_search_sub_menu($content_inner);                    }                });            });            $('body').click(function(e){                $target=$(e.target);                if ($target.closest('.search-form').length) {                    $element.find('.search-result').addClass('show');                }else{                    $element.find('.search-result').removeClass('show');                }            });        }        plugin.example_function = function () {        }        plugin.init();    }    // add the plugin to the jQuery.fn object    $.fn.mod_search = function (options) {        // iterate through the DOM elements we are attaching the plugin to        return this.each(function () {            // if plugin has not already been attached to the element            if (undefined == $(this).data('mod_search')) {                var plugin = new $.mod_search(this, options);                $(this).data('mod_search', plugin);            }        });    }})(jQuery);