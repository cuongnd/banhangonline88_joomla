<?phprequire_once JPATH_ROOT . DS . 'administrator/components/com_hikashop/helpers/helper.php';/** * Created by PhpStorm. * User: cuongnd * Date: 9/8/2016 * Time: 8:57 AM */class Modtab_productsHelper{    const MOD_TAB_PRODUCTS_TAB_ACTIVE ='mod_tab_products_' ;    public static $list_md5;    protected static $instances = null;    public static function getInstance()    {        if (empty(static::$instances)) {            static::$instances = new static();        }        return static::$instances;    }    public static function get_list_category_product($params, $deconstruction=null,$module=null)    {        $debug=JUtility::get_debug();        $session = JFactory::getSession();        $tab_active = $session->get(Modtab_productsHelper::MOD_TAB_PRODUCTS_TAB_ACTIVE . $module->id, 1);        if (isset($deconstruction) && $deconstruction) {            $categoryHelper = hikashop_get('class.category');            $categories = $params->get('categories', '');            $list_all_category = $categories;            return $list_all_category;        }        $cache = JFactory::getCache('mod_tab_products', '');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $categoryHelper = hikashop_get('class.category');        $categories = $params->get('categories', '');        foreach($categories as $index=> &$listCategoryProduct)        {            $listCategoryProduct=new modTabProducts_listCategoryProduct($listCategoryProduct);            $listCategoryProduct->detail=$categoryHelper->get($listCategoryProduct->category_id,true);            $listCategoryProduct->list_sub_category_detail  = $categoryHelper->getChilds($listCategoryProduct->category_id, true,array(),'',0,100,true);            $selected_key=array(                "category_id",                "category_parent_id",                "category_type",                "category_name",                "category_alias",                "parent_category_name",                "file_path",                "category_icon_file_path",                "category_medium_image_file_path",            );            foreach($listCategoryProduct->list_sub_category_detail as &$item){                foreach($item as $key=>$value ){                    if(!in_array($key,$selected_key)){                        unset($item->$key);                    }                }            }            if($tab_active==$index){                $list_all_category = JArrayHelper::pivot($listCategoryProduct->list_sub_category_detail, 'category_id');                $list_tree_category = array();                foreach ($list_all_category as $v) {                    $pt = $v->category_parent_id;                    $pt = ($pt == '' || $pt == $v->category_id) ? 'list_root' : $pt;                    $list = @$list_tree_category[$pt] ? $list_tree_category[$pt] : array();                    array_push($list, $v);                    $list_tree_category[$pt] = $list;                }                $get_tree_data = function ($function_call_back, $root_id = 0, &$tree_data, $list_tree_category, $level = 0) {                    if(isset($list_tree_category[$root_id]) && array_key_exists($root_id, $list_tree_category)  )foreach ($list_tree_category[$root_id] as $category) {                        $root_id1 = $category->category_id;                        if (!in_array($category->category_id, $tree_data)) {                            $tree_data[] = $category->category_id;                        }                        $level1 = $level + 1;                        $function_call_back($function_call_back, $root_id1, $tree_data, $list_tree_category, $level1);                    }                };                $tree_data = array();                $get_tree_data($get_tree_data, $listCategoryProduct->category_id, $tree_data, $list_tree_category, 0);                $listCategoryProduct->list_category = $tree_data;                array_unshift($tree_data, $listCategoryProduct->category_id);                $list_all_category_id=$tree_data;                $list_all_category1  = $cache->call( array( $categoryHelper, 'getChilds' ), $listCategoryProduct->category_id, true,array(),'',0,100,false,'a.category_id' );                $a_list_all_category1=array();                foreach($list_all_category1 as $item){                    $a_list_all_category1[]=$item->category_id;                }                $list_all_category_id=array_merge($a_list_all_category1,$list_all_category_id);                $query->clear()                    ->select('product.product_id,product_category.category_id,product.product_name,product.product_code')                    ->from('#__hikashop_product AS product')                    ->leftJoin('#__hikashop_product_category AS product_category ON product_category.product_id=product.product_id')                    ->where('product_category.category_id IN(' . implode(',', $list_all_category_id) . ')')                    ->where('product.product_published=1')                    ->leftJoin('#__hikashop_file AS file ON file.file_ref_id=product.product_id')                    ->where('file.file_type=' . $query->q('product'))                    ->select('GROUP_CONCAT(file.file_path SEPARATOR  ";") AS list_image')                    ->leftJoin('#__hikashop_price AS price ON price.price_product_id=product.product_id')                    ->select('price.price_value')                    ->group('product.product_id');                $order_by = $params->get('order_by', 'best_sale');                $sort_type = $params->get('sort_type', 'DESC');                if ($order_by == 'best_sale') {                    $query->order("product_sales $sort_type");                } elseif ($order_by == 'last_product') {                    $query->order("product_created $sort_type");                } elseif ($order_by == 'new_update') {                    $query->order("product_modified $sort_type");                } elseif ($order_by == 'random') {                    $query->order("RAND()");                } elseif ($order_by == 'hot') {                    $query->order("product_total_vote $sort_type");                } elseif ($order_by == 'hit') {                    $query->order("product_hit $sort_type");                }                $manufacturer = $params->get('manufacturer', '');                $max_product = $params->get('max_product', 20);                $max_view_small_product = $params->get('max_view_small_product', 10);                $total=(int)$max_product+(int)$max_view_small_product;                $db->setQuery($query,0,$total);                $mySql=$db->getQuery();                $key=md5($mySql);                if (!($list_product = $cache->get($key))) {                    $list_product  = $db->loadObjectList();                    $cache->store($list_product, $key);                }                $listCategoryProduct->list = $list_product;                array_splice($listCategoryProduct->list,0,$max_product);                $listCategoryProduct->list_small_product = $list_product;                array_splice($listCategoryProduct->list_small_product,$max_product,$max_product+$max_view_small_product);            }        }        return $categories;    }    public static function get_list_category_product_by_category_id($category_id,$params, $deconstruction=null,$module=null)    {        $debug=JUtility::get_debug();        $session = JFactory::getSession();        $cache = JFactory::getCache('mod_tab_products', '');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $categoryHelper = hikashop_get('class.category');        $listCategoryProduct=new modTabProducts_listCategoryProduct($category_id);        $listCategoryProduct->detail=$categoryHelper->get($listCategoryProduct->category_id,true);        $listCategoryProduct->list_sub_category_detail  = $categoryHelper->getChilds($listCategoryProduct->category_id, true,array(),'',0,100,true);        $selected_key=array(            "category_id",            "category_parent_id",            "category_type",            "category_name",            "category_alias",            "parent_category_name",            "file_path",            "category_icon_file_path",            "category_medium_image_file_path",        );        foreach($listCategoryProduct->list_sub_category_detail as &$item){            foreach($item as $key=>$value ){                if(!in_array($key,$selected_key)){                    unset($item->$key);                }            }        }        $list_all_category = JArrayHelper::pivot($listCategoryProduct->list_sub_category_detail, 'category_id');        $list_tree_category = array();        foreach ($list_all_category as $v) {            $pt = $v->category_parent_id;            $pt = ($pt == '' || $pt == $v->category_id) ? 'list_root' : $pt;            $list = @$list_tree_category[$pt] ? $list_tree_category[$pt] : array();            array_push($list, $v);            $list_tree_category[$pt] = $list;        }        $get_tree_data = function ($function_call_back, $root_id = 0, &$tree_data, $list_tree_category, $level = 0) {            if(isset($list_tree_category[$root_id]) && array_key_exists($root_id, $list_tree_category)  )foreach ($list_tree_category[$root_id] as $category) {                $root_id1 = $category->category_id;                if (!in_array($category->category_id, $tree_data)) {                    $tree_data[] = $category->category_id;                }                $level1 = $level + 1;                $function_call_back($function_call_back, $root_id1, $tree_data, $list_tree_category, $level1);            }        };        $tree_data = array();        $get_tree_data($get_tree_data, $listCategoryProduct->category_id, $tree_data, $list_tree_category, 0);        $listCategoryProduct->list_category = $tree_data;        array_unshift($tree_data, $listCategoryProduct->category_id);        $list_all_category_id=$tree_data;        $list_all_category1  = $cache->call( array( $categoryHelper, 'getChilds' ), $listCategoryProduct->category_id, true,array(),'',0,100,false,'a.category_id' );        $a_list_all_category1=array();        foreach($list_all_category1 as $item){            $a_list_all_category1[]=$item->category_id;        }        $list_all_category_id=array_merge($a_list_all_category1,$list_all_category_id);        $query->clear()            ->select('product.product_id,product_category.category_id,product.product_name,product.product_code')            ->from('#__hikashop_product AS product')            ->leftJoin('#__hikashop_product_category AS product_category ON product_category.product_id=product.product_id')            ->where('product_category.category_id IN(' . implode(',', $list_all_category_id) . ')')            ->where('product.product_published=1')            ->leftJoin('#__hikashop_file AS file ON file.file_ref_id=product.product_id')            ->where('file.file_type=' . $query->q('product'))            ->select('GROUP_CONCAT(file.file_path SEPARATOR  ";") AS list_image')            ->leftJoin('#__hikashop_price AS price ON price.price_product_id=product.product_id')            ->select('price.price_value')            ->group('product.product_id');        $order_by = $params->get('order_by', 'best_sale');        $sort_type = $params->get('sort_type', 'DESC');        if ($order_by == 'best_sale') {            $query->order("product_sales $sort_type");        } elseif ($order_by == 'last_product') {            $query->order("product_created $sort_type");        } elseif ($order_by == 'new_update') {            $query->order("product_modified $sort_type");        } elseif ($order_by == 'random') {            $query->order("RAND()");        } elseif ($order_by == 'hot') {            $query->order("product_total_vote $sort_type");        } elseif ($order_by == 'hit') {            $query->order("product_hit $sort_type");        }        $manufacturer = $params->get('manufacturer', '');        $product_style = $params->get('product_style', '');        $max_product = $params->get('max_product', 20);        $max_view_small_product = $params->get('max_view_small_product', 20);        $total=(int)$max_product+(int)$max_view_small_product;        $db->setQuery($query,0,$total);        $mySql=$db->getQuery();        $key=md5($mySql);        if (!($list_product = $cache->get($key))) {            $list_product  = $db->loadObjectList();            $cache->store($list_product, $key);        }        if($product_style=='table'){            $listCategoryProduct->list = array_slice($list_product,0,(int)$max_product);        }else{            $listCategoryProduct->list = array_slice($list_product,0,(int)$max_product);            $list_small_product=array_slice($list_product,(int)$max_product,(int)$total);            $listCategoryProduct->list_small_product = $list_small_product;        }        return $listCategoryProduct;    }}class list_category_product{    public $detail;    public $list=array();    public $list_small_product=array();}