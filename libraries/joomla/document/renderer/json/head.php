<?php/** * @package     Joomla.Platform * @subpackage  Document * * @copyright   Copyright (C) 2005 - 2016 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE */defined('JPATH_PLATFORM') or die;use MatthiasMullie\Minify;use Joomla\Utilities\ArrayHelper;/** * JDocument head renderer * * @since  3.5 */class JDocumentRendererJsonHead extends JDocumentRenderer{    public $rebuild_js = false;    public $rebuild_css = false;    /**     * Renders the document head and returns the results as a string     *     * @param   string $head (unused)     * @param   array $params Associative array of values     * @param   string $content The script     *     * @return  string  The output of the script     *     * @since   3.5     */    public function render($head, $params = array(), $content = null)    {        return $this->fetchHead($this->_doc);    }    /**     * Generates the head HTML and return the results as a string     *     * @param   JDocumentHtml $document The document for which the head will be created     *     * @return  string  The head hTML     *     * @since   3.5     * @deprecated  4.0  Method code will be moved into the render method     */    public function fetchHead($document)    {    }    private function make_js($scripts, $path_file_all_js, $write_file = true)    {        if ($write_file) {        }        $document = JFactory::getDocument();        $document->_scripts = array();        $compress_file = substr($path_file_all_js, 0, -2) . "min.js";;        $document->addScript('/' . $compress_file);    }    private function make_style_sheets($styleSheets, $path_file_all_css, $write_file = true)    {        $css_content = '';        $list_less_file = array();        foreach ($styleSheets as $strSrc => $strAttr) {            if (strpos($strSrc, '.less') !== false) {                $list_less_file[$strSrc] = $strAttr;            } else {                if (filter_var($strSrc, FILTER_VALIDATE_URL)) {                    if (strpos($strSrc, JUri::root()) !== false) {                        $strSrc = str_replace(JUri::root(), JPATH_ROOT . DS, $strSrc);                    }                } else {                    $strSrc = JPATH_ROOT . DS . $strSrc;                }                if (!filter_var($strSrc, FILTER_VALIDATE_URL)) {                    $has_character = strpos($strSrc, "?");                    //check has charactor "?"                    if ($has_character !== false) {                        $strSrc = substr($strSrc, 0, $has_character);                    }                }                if ($write_file) {                    $file_content = JFile::read($strSrc);                    if (strpos($file_content, "../") !== false) {                        $strSrc1 = str_replace(JPATH_ROOT . DS, "", $strSrc);                        $strSrc1 = explode('/', $strSrc1);                        $strSrc1 = array_slice($strSrc1, 0, count($strSrc1) - 1);                        $strSrc1 = implode('/', $strSrc1);                        $file_content = str_replace("../", "/" . $strSrc1 . '/../', $file_content);                    }                    $css_content .= $file_content . "\n\r";                }            }        }        if ($write_file) {            JFile::write(JPATH_ROOT . DS . $path_file_all_css, $css_content);        }        $document = JFactory::getDocument();        $document->_styleSheets = $list_less_file;        $document->addStyleSheet(JUri::root() . $path_file_all_css);    }}