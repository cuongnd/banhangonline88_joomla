<?php/** * @version    CVS: 1.0.0 * @package    Com_Modules * @author     cuong <nguyendinhcuong@gmail.com> * @copyright  2016 cuong * @license    GNU General Public License version 2 or later; see LICENSE.txt */// No direct accessdefined('_JEXEC') or die;use Joomla\Registry\Registry;jimport('joomla.application.component.controllerform');/** * Module controller class. * * @since  1.6 */class MenusControllerItems extends JControllerLegacy{    public function ajax_get_children_menu_item_by_parent_menu_id(){        $app = JFactory::getApplication();        $input=$app->input;        $parent_id=$input->getInt('parent_id',0);        $menu = $app->getMenu();        $menu_item=$menu->getItem($parent_id);        $list=$menu->get_items_menu_site_by_menu_type($menu_item->menutype);        // The menu class is deprecated. Use nav instead        $children_menu_item = array();        $list = JArrayHelper::pivot($list, 'id');        $list1 = array();        foreach ($list as $item) {            $item1 = new stdClass();            $item1->id = $item->id;            $item1->parent_id = $item->parent_id;            $item1->title = $item->title;            $item1->link = $item->link;            $item1->flink = $item->flink;            $item1->params = $item->params;            $list1[] = $item1;        }        foreach ($list1 as $v) {            $pt = $v->parent_id;            $temp = new Registry();            $temp->set('menu_image', $v->params->get('menu_image', ''));            $temp->set('jv_selection', $v->params->get('jv_selection', ''));            $v->params = $temp;            $pt = ($pt == '' || $pt == $v->id) ? 'list_root' : $pt;            $temp_list = @$children_menu_item[$pt] ? $children_menu_item[$pt] : array();            array_push($temp_list, $v);            $children_menu_item[$pt] = $temp_list;        }        $treerecurse =function ($function_call_back,$id, $indent, &$list, &$children, $maxlevel = 9999, $level = 0, $type = 1)        {            if (@$children[$id] && $level <= $maxlevel)            {                foreach ($children[$id] as $v)                {                    $id = $v->id;                    if ($type)                    {                        $pre = '<sup>|_</sup>&#160;';                        $spacer = '.&#160;&#160;&#160;&#160;&#160;&#160;';                    }                    else                    {                        $pre = '- ';                        $spacer = '&#160;&#160;';                    }                    if ($v->parent_id == 0)                    {                        $txt = $v->title;                    }                    else                    {                        $txt = $pre . $v->title;                    }                    $item_store=$v;                    $item_store->treename = $indent . $txt;                    $item_store->totalChildren = count($children[$id]);                    $item_store->children = array();                    $function_call_back($function_call_back,$id, $indent . $spacer, $item_store->children, $children, $maxlevel, $level + 1, $type);                    $list[]=$item_store;                }            }            return $list;        };        $list=array();        $treerecurse($treerecurse,$parent_id,"",$list,$children_menu_item);        echo json_encode($list);    }	public function ajax_get_navigation()	{	    $module_navigation_id=114;	    $module=JModuleHelper::getModuleById($module_navigation_id);	    $params=new Registry();	    $params->loadString($module->params);		$input=JFactory::getApplication()->input;		$post=json_decode(file_get_contents('php://input'));		require_once JPATH_ROOT.DS.'modules/mod_menu/helper.php';		$mod_menu_helper=ModMenuHelper::getInstance();		$params->set('endLevel',1);        $list=$mod_menu_helper->getList($params);        $list1=array();        foreach($list as $item)        {            $item1=new stdClass();            $item1->id=$item->id;            $item1->target="list:12";            $item1->type="Itemid";            $item1->name=$item->title;            $item1->image_url=JUri::root().$item->android_image;            if(!$item->android_image)            {                $item1->image_url='http://77.93.198.186/u/2016/05/03/1462284245-9.jpg';            }            $list1[]=$item1;        }        $response=array(            metadata=>array(                links=>array(                    first=>"first",                    last=>"last",                    prev=>null,                    next=>null,                    self=>"self"                ),                records_count=>3            ),            records=>$list1        );        echo json_encode($response);        die;	}	public function ajax_get_left_menu_category()	{	    $module_navigation_id=114;	    $module=JModuleHelper::getModuleById($module_navigation_id);	    $params=new Registry();	    $params->loadString($module->params);		$input=JFactory::getApplication()->input;		$post=json_decode(file_get_contents('php://input'));		require_once JPATH_ROOT.DS.'modules/mod_menu/helper.php';		$mod_menu_helper=ModMenuHelper::getInstance();		$children_menu_item = array();        $list=$mod_menu_helper->getList($params);        foreach ($list as $v) {            $pt = $v->parent_id;            $temp = new Registry();            $temp->set('menu_image', $v->params->get('menu_image', ''));            $temp->set('jv_selection', $v->params->get('jv_selection', ''));            $v->params = $temp;            $pt = ($pt == '' || $pt == $v->id) ? 'list_root' : $pt;            $temp_list = @$children_menu_item[$pt] ? $children_menu_item[$pt] : array();            array_push($temp_list, $v);            $children_menu_item[$pt] = $temp_list;        }        $getMenu=function($item){                $current_item=new stdClass();                $current_item->menu_item_id=$item->id;                $current_item->name=$item->title;                $current_item->itemid=$item->id;                $current_item->link=JUri::root().$item->link."&Itemid=$item->id";                $current_item->type=$item->type;                $component=$item->query['option'];                $view=$item->query['view'];                $layout=$item->query['layout'];                $current_item->view=$view;                $current_item->component=$component;                $current_item->layout=$layout;                $current_item->weight=0;                $current_item->graph_id=$item->id;                $current_item->original_id=$item->id;                $current_item->children=array();                return $current_item;        };        $make_tree=function($function_call_back,$root_id,&$tree_node,$children_menu_item,$getMenu){            if(count($children_menu_item[$root_id])){                foreach($children_menu_item[$root_id] as $item){                    $current_item=$getMenu($item);                    $function_call_back($function_call_back,$item->id,$current_item->children,$children_menu_item,$getMenu);                    $tree_node[]=$current_item;                }            }        };        $tree_node=array();        $root_id=1;        foreach($children_menu_item[$root_id] as $item){             $current_item=$getMenu($item);            $make_tree($make_tree,$item->id,$current_item->children,$children_menu_item,$getMenu);            $tree_node[]=$current_item;        }        $response=array(            navigation=>$tree_node        );        echo json_encode($response);        die;	}}