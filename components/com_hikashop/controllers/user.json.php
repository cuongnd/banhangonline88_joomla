<?php/** * @package    HikaShop for Joomla! * @version    2.6.3 * @author    hikashop.com * @copyright    (C) 2010-2016 HIKARI SOFTWARE. All rights reserved. * @license    GNU/GPLv3 http://www.gnu.org/licenses/gpl-3.0.html */defined('_JEXEC') or die('Restricted access');?><?phpclass userController extends hikashopController{    var $delete = array();    var $modify = array();    var $modify_views = array();    var $add = array();    function __construct($config = array(), $skip = false)    {        parent::__construct($config, $skip);        if (!$skip) {            $this->registerDefaultTask('cpanel');        }        $this->display = array_merge($this->display, array(            'cpanel',            'go_to_cpanel',            'active_user_partner_activated_by_current_user_login_by_facebook',            'get_google_plus_login',            'active_user_partner_activated_by_current_user_login_by_google',            'form',            'register',            'downloads'        ));    }    function active_user_partner_activated_by_current_user_login_by_facebook()    {        $app = JFactory::getApplication();        $fb = JFactory::getFaceBook();        $helper = $fb->getRedirectLoginHelper();        try {            $accessToken = $helper->getAccessToken();        } catch (Facebook\Exceptions\FacebookResponseException $e) {            // When Graph returns an error            $message = JText::sprintf('FACEBOOK_GRAPH_RETURNED_AN_ERROR', $e->getMessage());            $app->redirect(JUri::root() . JRoute::_('index.php?option=com_hikashop&ctrl=user&task=form'), $message);            return;        } catch (Facebook\Exceptions\FacebookSDKException $e) {            // When Graph returns an error            $message = JText::sprintf('FACEBOOK_GRAPH_RETURNED_AN_ERROR', $e->getMessage());            $app->redirect(JUri::root() . JRoute::_('index.php?option=com_hikashop&ctrl=user&task=form'), $message);            return;        }        if (!isset($accessToken)) {            if ($helper->getError()) {                /*header('HTTP/1.0 401 Unauthorized');                echo "Error: " . $helper->getError() . "\n";                echo "Error Code: " . $helper->getErrorCode() . "\n";                echo "Error Reason: " . $helper->getErrorReason() . "\n";                echo "Error Description: " . $helper->getErrorDescription() . "\n";*/                // When Graph returns an error                $message = JText::sprintf('FACEBOOK_GRAPH_RETURNED_AN_ERROR', $helper->getMessage());                $app->redirect(JUri::root() . JRoute::_('index.php?option=com_hikashop&ctrl=user&task=form'), $message);                return;            } else {                /*                header('HTTP/1.0 400 Bad Request');                                echo 'Bad request';*/                $message = JText::sprintf('FACEBOOK_GRAPH_RETURNED_AN_ERROR', 'Bad request');                $app->redirect(JUri::root() . JRoute::_('index.php?option=com_hikashop&ctrl=user&task=form'), $message);                return;            }        }        try {            // Returns a `Facebook\FacebookResponse` object            $response = $fb->get('/me?fields=id,name,email', $accessToken);        } catch (Facebook\Exceptions\FacebookResponseException $e) {            // When Graph returns an error            $message = JText::sprintf('FACEBOOK_GRAPH_RETURNED_AN_ERROR', $e->getMessage());            $app->redirect(JUri::root() . JRoute::_('index.php?option=com_hikashop&ctrl=user&task=form'), $message);            return;        } catch (Facebook\Exceptions\FacebookSDKException $e) {            // When Graph returns an error            $message = JText::sprintf('FACEBOOK_GRAPH_RETURNED_AN_ERROR', $e->getMessage());            $app->redirect(JUri::root() . JRoute::_('index.php?option=com_hikashop&ctrl=user&task=form'), $message);            return;        }        $user_face_book = $response->getGraphUser();        $facebook_email = $user_face_book->getEmail();        $facebook_id = $user_face_book->getId();        $user_by_email = JUserHelper::get_user_by_facebook_id($facebook_id);        if (!$user_by_email && $facebook_email) {            $user_by_email = JUserHelper::get_user_by_email($facebook_email);        }        $app = JFactory::getApplication();        $session = JFactory::getSession();        $new_user_system = 0;        if ($user_by_email) {            $user = JFactory::getUser($user_by_email->id);            if (!$user->facebook_id) {                $user->facebook_id = $facebook_id;                $user->save();            }        } else {            if (trim($facebook_email) == "") {                $facebook_email = JUserHelper::get_random_facebook_email();            }            $new_user_system = 1;            $temp = new stdClass();            $temp->id = 0;            $temp->useractivation = 0;            $temp->email1 = $facebook_email;            $temp->username = $facebook_email;            $temp->unblock = 0;            $temp->activate = 1;            $temp->facebook_id = $facebook_id;            $temp->name = $user_face_book->getName();            $temp->password1 = JUserHelper::genRandomPassword();            // Finish the registration.            $data = (array)$temp;            JModelLegacy::addIncludePath(JPATH_ROOT . DS . 'components/com_users/models');            $model_registration = JModelLegacy::getInstance('Registration', 'UsersModel');            $params = JComponentHelper::getParams('com_users');            $params->set('useractivation', 0);            $return = $model_registration->ajax_register($data, $params);            // Check for errors.            if ($return === false) {                // Save the data in the session.                $app->setUserState('users.registration.form.data', $data);                // Redirect back to the registration form.                $message = JText::sprintf('COM_USERS_REGISTRATION_SAVE_FAILED', $model_registration->getError());                die($message);            }            $user = JUserHelper::get_user_by_email($facebook_email);            $user = JFactory::getUser($user->id);        }        $session->set('user', $user);        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->clear();        $query->select('*')            ->from('#__hikashop_user')            ->where('user_email=' . $query->q($user->email));        $affiliate_user = $db->setQuery($query)->loadObject();        self::go_to_cpanel($new_user_system, $affiliate_user, $user);        return;    }    public function go_to_cpanel($new_user_system, $customer_user,JUser $user)    {        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $app = JFactory::getApplication();        if ($new_user_system == 1) {            if ($customer_user) {                $query->clear();                $query->update('#__hikashop_user')                    ->set('user_partner_activated=1')                    ->set('user_cms_id='.(int) $user->id)                    ->where('user_id='.(int)$customer_user->user_id)                ;                $db->setQuery($query)->execute();                $message = JText::sprintf('NEW_ACOUNT_SYSTEM_CREATED_AND_TO_EXISTS_ACOUNT_CUSTOMER_AFFILIATE', $user->name, $user->email, $user->email, $user->email);            } else {                $query->clear();                $query->insert('#__hikashop_user')                    ->set('user_cms_id=' . (int)$user->id)                    ->set('user_email=' . $query->q($user->email))                    ->set('user_partner_activated=1')                ;                $db->setQuery($query)->execute();                $message = JText::sprintf('NEW_ACOUNT_SYSTEM_CREATED_AND_TO_EXISTS_ACOUNT_CUSTOMER_AFFILIATE', $user->name, $user->email, $user->email, $user->email);            }        } else {            //old customer user            if ($customer_user) {                $query->clear();                $query->update('#__hikashop_user')                    ->set('user_partner_activated=1')                    ->set('user_cms_id='.(int) $user->id)                    ->where('user_id='.(int)$customer_user->user_id)                ;                $db->setQuery($query)->execute();                $message = JText::sprintf('EXIST_ACOUNT_SYSTEM_AUTO_LOGIN_AND_REDIRECT_TO_CPANEL_CUSTOMER_AFFILIATE', $user->name);            } else {                $query->clear();                $query->insert('#__hikashop_user')                    ->set('user_cms_id=' . (int)$user->id)                    ->set('user_email=' . $query->q($user->email))                    ->set('user_partner_activated=1')                ;                $db->setQuery($query)->execute();                $message = JText::sprintf('EXIST_ACOUNT_SYSTEM_AUTO_LOGIN_AND_NEW_ACOUNT_CUSTOMER_AFFILIATE_CREATED_AND_REDIRECT_TO_CPANEL_CUSTOMER_AFFILIATE', $user->name, $user->email, $user->email, $user->email);            }        }        $app->redirect(JUri::root() . JRoute::_('index.php?option=com_hikashop&ctrl=affiliate&task=show'), $message);    }    function get_google_plus_login()    {        ########## Google Settings.Client ID, Client Secret from https://console.developers.google.com #############        require_once JPATH_ROOT . DS . 'libraries/google-api-php-client-master/src/Google/autoload.php';        $client_id = '256006136278-rs9r009iunikdtmcmbifamhdo9b6vei4.apps.googleusercontent.com';        $client_secret = 'Tk5gGQyODcU8GDHGjdIYIHJ7';        ###################################################################        $client = new Google_Client();        $client->setClientId($client_id);        $client->setClientSecret($client_secret);        $client->addScope("email");        $client->addScope("profile");        $service = new Google_Service_Oauth2($client);        $redirectUri = JUri::root() . 'index.php?option=com_hikashop&ctrl=user&task=active_user_partner_activated_by_current_user_login_by_google';        $client->setRedirectUri($redirectUri);        $auth_url = $client->createAuthUrl();        $response = new stdClass();        $response->auth_url = $auth_url;        echo json_encode($response);        die;    }    function register()    {        if (empty($_REQUEST['data'])) {            return $this->form();        }        $class = hikashop_get('class.user');        $status = $class->register($this, 'user');        if (!empty($status)) {            $config =& hikashop_config();            $simplified = $config->get('simplified_registration', 0);            if ($simplified != 2) {                $usersConfig = JComponentHelper::getParams('com_users');                $useractivation = $usersConfig->get('useractivation');                if ($useractivation == 0) {                    $this->_login($class->registerData->username, $class->registerData->password);                }            }            $app = JFactory::getApplication();            $app->enqueueMessage(JText::sprintf('THANK_YOU_FOR_REGISTERING', HIKASHOP_LIVE));            JRequest::setVar('layout', 'after_register');            return parent::display();        }        $this->form();    }    function active_user_partner_activated_by_current_user_login_by_google()    {        require_once JPATH_ROOT . DS . 'libraries/google-api-php-client-master/src/Google/autoload.php';        $client_id = '256006136278-rs9r009iunikdtmcmbifamhdo9b6vei4.apps.googleusercontent.com';        $client_secret = 'Tk5gGQyODcU8GDHGjdIYIHJ7';        ###################################################################        $client = new Google_Client();        $client->setClientId($client_id);        $client->setClientSecret($client_secret);        $client->addScope("email");        $client->addScope("profile");        $service = new Google_Service_Oauth2($client);        $redirectUri = JUri::root() . 'index.php?option=com_hikashop&ctrl=user&task=active_user_partner_activated_by_current_user_login_by_google';        $client->setRedirectUri($redirectUri);        $app = JFactory::getApplication();        $input = $app->input;        $code = $input->getString('code');        $client->authenticate($code);        $access_token = $client->getAccessToken();        $client->setAccessToken($access_token);        /*        $message= JText::sprintf('FACEBOOK_GRAPH_RETURNED_AN_ERROR',$e->getMessage());                $app->redirect(JUri::root().JRoute::_('index.php?option=com_hikamarket&ctrl=vendor&task=cpanel'),$message);*/        $googlePlus = new Google_Service_Plus($client);        $userProfile = $googlePlus->people->get('me');        $google_email = reset($userProfile->getEmails())->getValue();        $user_by_email = JUserHelper::get_user_by_email($google_email);        $app = JFactory::getApplication();        $session = JFactory::getSession();        $new_user_system = 0;        if ($user_by_email) {            $user = JFactory::getUser($user_by_email->id);        } else {            $temp = new stdClass();            $temp->id = 0;            $temp->useractivation = 0;            $temp->email1 = $google_email;            $temp->username = $google_email;            $temp->name = $userProfile->getName()->getGivenName();            $temp->password1 = JUserHelper::genRandomPassword();            $new_user_system = 1;            // Finish the registration.            $data = (array)$temp;            JModelLegacy::addIncludePath(JPATH_ROOT . DS . 'components/com_users/models');            $model_registration = JModelLegacy::getInstance('Registration', 'UsersModel');            $params = JComponentHelper::getParams('com_users');            $params->set('useractivation', 0);            $return = $model_registration->ajax_register($data, $params);            // Check for errors.            if ($return === false) {                // Save the data in the session.                $app->setUserState('users.registration.form.data', $data);                // Redirect back to the registration form.                $message = JText::sprintf('COM_USERS_REGISTRATION_SAVE_FAILED', $model_registration->getError());                die($message);            }            $user = JUserHelper::get_user_by_email($google_email);            $user = JFactory::getUser($user->id);        }        $session->set('user', $user);        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->clear();        $query->clear();        $query->select('*')            ->from('#__hikashop_user')            ->where('user_email=' . $query->q($user->email));        $customer_user = $db->setQuery($query)->loadObject();        self::go_to_cpanel($new_user_system, $customer_user, $user);        return;    }    function _login($user = '', $pass = '', $checkToken = true)    {        $options = array();        $options['remember'] = JRequest::getBool('remember', false);        $options['return'] = false;        $credentials = array();        if (empty($user)) {            $credentials['username'] = JRequest::getVar('username', '', 'request', 'username');        } else {            $credentials['username'] = $user;        }        if (empty($pass)) {            $credentials['password'] = JRequest::getString('passwd', '', 'request', JREQUEST_ALLOWRAW);        } else {            $credentials['password'] = $pass;        }        $mainframe = JFactory::getApplication();        $error = $mainframe->login($credentials, $options);        $user = JFactory::getUser();        if (JError::isError($error) || $user->guest) {            return false;        }        $class = hikashop_get('class.user');        $user_id = $class->getID($user->get('id'));        if ($user_id) {            $app = JFactory::getApplication();            $app->setUserState(HIKASHOP_COMPONENT . '.user_id', $user_id);        }        return true;    }    function cpanel()    {        if (!$this->_checkLogin()) return true;        JRequest::setVar('layout', 'cpanel');        return parent::display();    }    function form()    {        $user = JFactory::getUser();        if ($user->guest) {            JRequest::setVar('layout', 'form');            return $this->display();        } else {            $app = JFactory::getApplication();            $app->redirect(hikashop_completeLink('user&task=cpanel', false, true));            return false;        }    }    function downloads()    {        if (!$this->_checkLogin()) return true;        JRequest::setVar('layout', 'downloads');        return parent::display();    }    function _checkLogin()    {        $user = JFactory::getUser();        if ($user->guest) {            $app = JFactory::getApplication();            $app->enqueueMessage(JText::_('PLEASE_LOGIN_FIRST'));            global $Itemid;            $url = '';            if (!empty($Itemid)) {                $url = '&Itemid=' . $Itemid;            }            if (!HIKASHOP_J16) {                $url = 'index.php?option=com_user&view=login' . $url;            } else {                $url = 'index.php?option=com_easysocial&view=login' . $url;            }            $app->redirect(JRoute::_($url . '&return=' . urlencode(base64_encode(hikashop_currentUrl('', false))), false));            return false;        }        return true;    }}